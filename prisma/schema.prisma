// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  name        String
  gender      Gender
  email       String     @unique
  password    String
  phoneNumber String     @unique
  money       Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  lastLoginAt DateTime   @default(now())
  loginCount  Int        @default(0)
  character   Character?
}

model Character {
  id      Int    @id @default(autoincrement())
  gender  Gender
  beard   String @default("")
  glasses String @default("")
  hair    String @default("")
  hands   String @default("HANDS_01_1")
  hat     String @default("")
  head    String @default("HEAD_01_1")
  pants   String @default("PANTS_01_1")
  shoes   String @default("SHOES_01_1")
  torso   String @default("TORSO_01_1")
  userEmail  String    @unique
  user    User   @relation(fields: [userEmail], references: [email])
  furnitures Furniture[]
  instruments Instrument[]
  clothings Clothing[]
}

model Furniture {
  id        Int      @id @default(autoincrement())
  name      String @unique
  description String?
  price     Int
  owners    Character[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Instrument {
  id        Int      @id @default(autoincrement())
  name      String @unique
  description String?
  price     Int
  owners    Character[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Clothing {
  id        Int      @id @default(autoincrement())
  name      String @unique
  description String?
  price     Int
  owners    Character[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}
